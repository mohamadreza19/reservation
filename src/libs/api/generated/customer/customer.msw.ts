/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Vaghtban API
 * API for managing reservations
 * OpenAPI spec version: 1.0
 */
import {
  faker
} from '@faker-js/faker';

import {
  HttpResponse,
  delay,
  http
} from 'msw';

import type {
  Customer
} from '.././models';


export const getFindProfileResponseMock = (overrideResponse: Partial< Customer > = {}): Customer => ({id: faker.string.alpha(20), userInfo: {...{phoneNumber: faker.string.alpha(20), password: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), role: faker.helpers.arrayElement(['super_admin','business_admin','employee','customer'] as const), userName: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), firstName: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), lastName: faker.helpers.arrayElement([faker.string.alpha(20), undefined])},}, ...overrideResponse})


export const getFindProfileMockHandler = (overrideResponse?: Customer | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Customer> | Customer)) => {
  return http.get('*/customer/profile', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getFindProfileResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getCustomerMock = () => [
  getFindProfileMockHandler()
]
